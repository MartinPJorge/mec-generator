* using log directory ‘/home/jorge/Documentos/mec-generator/mecgen.Rcheck’
* using R version 3.6.1 (2019-07-05)
* using platform: x86_64-redhat-linux-gnu (64-bit)
* using session charset: UTF-8
* using options ‘--no-manual --as-cran’
* checking for file ‘mecgen/DESCRIPTION’ ... OK
* this is package ‘mecgen’ version ‘0.0.0.9000’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘mecgen’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... WARNING
Non-standard license specification:
  What license it uses
Standardizable: FALSE
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
attachEndpoints: no visible binding for global variable ‘id’
attachEndpoints: no visible global function definition for ‘runif’
attachFogEndpoints: no visible global function definition for ‘tail’
attachFogNodes: no visible binding for global variable ‘id’
attachFogNodes: no visible global function definition for ‘runif’
attachServers: no visible binding for global variable ‘id’
baseIntensity: no visible global function definition for ‘fromJSON’
createMatrix: no visible global function definition for ‘runif’
findSquare: no visible global function definition for ‘destination’
genCells: no visible global function definition for ‘owin’
genInterpInt : interpolator: no visible global function definition for
  ‘interp2’
getSquareFactors: no visible global function definition for ‘ceil’
getSquareFactors: no visible global function definition for ‘owin’
graphFrames: no visible binding for global variable ‘bandwidth’
graphFrames: no visible global function definition for ‘tail’
graphFrames: no visible global function definition for ‘head’
groupElems: no visible global function definition for ‘hclust’
groupElems: no visible global function definition for ‘as.dist’
groupElems: no visible global function definition for ‘cutree’
groupElems: no visible global function definition for ‘head’
groupElems: no visible global function definition for ‘tail’
intensityFactors: no visible global function definition for ‘ceil’
jorgeMaternIImapI: no visible global function definition for ‘rpoispp’
jorgeMaternIImapI: no visible global function definition for ‘rlabel’
linkAccessRings: no visible global function definition for ‘tail’
linkAccessRings: no visible global function definition for ‘head’
linkAggRings: no visible global function definition for ‘tail’
linkAggRings: no visible global function definition for ‘head’
matternIImapIintMapprox3 : integrand4: no visible global function
  definition for ‘integral2’
matternIImapIintMapprox3: no visible global function definition for
  ‘integral2’
outerRect: no visible global function definition for ‘destination’
townIntM: no visible global function definition for ‘integral2’
write5GtoGraph: no visible binding for global variable ‘bandwidth’
write5GtoGraph: no visible global function definition for ‘tail’
write5GtoGraph: no visible global function definition for ‘head’
Undefined global functions or variables:
  as.dist bandwidth ceil cutree destination fromJSON hclust head id
  integral2 interp2 owin rlabel rpoispp runif tail
Consider adding
  importFrom("stats", "as.dist", "cutree", "hclust", "runif")
  importFrom("utils", "head", "tail")
to your NAMESPACE file.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'attachEndpoints'
  ‘links’
Documented arguments not in \usage in documentation object 'attachEndpoints':
  ‘link’

Undocumented arguments in documentation object 'attachFogEndpoints'
  ‘links’
Documented arguments not in \usage in documentation object 'attachFogEndpoints':
  ‘link’ ‘distanceUnits’

Undocumented arguments in documentation object 'attachFogNodes'
  ‘links’
Documented arguments not in \usage in documentation object 'attachFogNodes':
  ‘link’ ‘distanceUnits’

Undocumented arguments in documentation object 'attachServers'
  ‘links’
Documented arguments not in \usage in documentation object 'attachServers':
  ‘link’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... WARNING
Files not of a type allowed in a ‘data’ directory:
  ‘regions.json’
Please use e.g. ‘inst/extdata’ for non-R data files

* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking examples ... OK
* checking for unstated dependencies in ‘tests’ ... WARNING
'library' or 'require' call not declared from: ‘testthat’
* checking tests ... ERROR
  Running ‘testthat.R’
Running the tests in ‘tests/testthat.R’ failed.
Last 13 lines of output:
         e$handled <- TRUE
         test_error <<- e
     }, "invalid 'times' argument", base::quote(rep(x = 23, times = nrow(nodes)))) at testthat/test_computing.R:256
  2: eval(code, test_env)
  
  ══ testthat results  ══════════════════════════════════════════════════
  [ OK: 4 | SKIPPED: 0 | WARNINGS: 0 | FAILED: 5 ]
  1. Error: Server assignments work (@test_computing.R#8) 
  2. Error: Fog nodes generation works (@test_computing.R#59) 
  3. Error: Fog nodes generation works with multiple cell assignments (@test_computing.R#114) 
  4. Error: Fog node endpoints are generated correctly (@test_computing.R#188) 
  5. Error: Endpoints generation works (@test_computing.R#256) 
  
  Error: testthat unit tests failed
  Execution halted
* DONE
Status: 1 ERROR, 4 WARNINGs, 1 NOTE
